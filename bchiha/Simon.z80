;SIMON Game written by Jim Robertson
;-----------------------------------
; The 4 LED Segments from the right represent keys 0,4,8,C.
; The segments light up and the order they light up represents the
; keys to press.
;
; Modified by B Chiha to auto populate random numbers at startup.
;
            ORG     0A00H 
SETUP:               
            CALL    RANGEN      ;Set up random numbers from 0B00 to 0BFF
            LD      A,R         ;Get random number for random table lookup
            LD      L,A         ;at 0Bxx
START:
            LD      C,01H
            CALL    DELAY
            LD      H,0BH
GAME:
            LD      B,C         ;Working counter
            PUSH    HL
LOOP:
            LD      A,(HL)      ;Get Random value
            CALL    SOUND
            INC     L
            CALL    DELAY       ;Call delay which shortens on each call
            DJNZ    LOOP
            POP     HL
            LD      B,C
            PUSH    HL
PLAYER:
            CALL    KEYPRESS
            JR      NZ,PLAYER   ;No key pressed
            RRCA                ;Check for keys 0,4,8,C by shifting
            RRCA                ;twice to the right..Clever!
            CP      04H         ;Compare with 4 to see if valid key
            JR      NC,PLAYER
            PUSH    HL
            LD      HL,DSPTBL   ;Display Table
            ADD     A,L
            LD      L,A
            LD      A,(HL)      ;Get display value based on key press
            POP     HL
            CP      (HL)        ;Complare key pressed with value in lookup
            JR      NZ,ERROR
            CALL    SOUND
            INC     L
KEYWAIT:
            CALL    KEYPRESS    ;Get another key
            JR      Z,KEYWAIT   ;Loop until key released
            DJNZ    PLAYER
            POP     HL
            CALL    DELAY
            INC     C
            JR      GAME        ;Jump back to start of game
ERROR:
            LD      A,30H       ;Incorrect answer
            CALL    SOUND
            LD      B,C
            XOR     A
HEXBCD:
            INC     A
            DAA    
            DJNZ    HEXBCD
            DEC     A
            DAA
            LD      C,A
SCAN:       XOR     A           ;Multiplex
            OUT     (02),A
            LD      A,04H
            OUT     (01),A
            LD      A,C
            CALL    BCDHEX
            LD      B,00H
LOOP1:      DJNZ    LOOP1
            XOR     A
            OUT     (02),A
            LD      A,08H
            OUT     (01),A
            LD      A,C
            RRCA
            RRCA
            RRCA
            RRCA
            CALL    BCDHEX
            LD      B,00H
LOOP2:      DJNZ    LOOP2
            CALL    KEYPRESS
            INC     D
            CP      12H        ;Check if GO pressed
            JR      NZ,SCAN    ;Keep scanning until GO pressed
            LD      L,D        ;Put random number in L
            XOR     A
            OUT     (01),A
            CALL    SOUND
            JR      START
BCDHEX:
            AND     0FH        ;Mask high nibble
            LD      HL,SEGTBL
            ADD     A,L
            LD      L,A
            LD      A,(HL)     ;Get Segment
            OUT     (02),A     ;Display number
            RET
DELAY:
            LD      DE,4000H
            LD      A,C        ;Frame count
            RLCA
            RLCA
LOOP3:
            DEC     D
            DEC     A
            JR      NZ,LOOP3
LOOP4:
            DEC     DE
            LD      A,D
            OR      E
            JR      NZ,LOOP4
            LD      A,04H
            OUT     (02),A
            RET
SOUND:
            PUSH    HL
            PUSH    DE
            PUSH    BC
            LD      C,A
            RLCA
            ADD     A,18H
            LD      HL,01E0H
            LD      B,A
            LD      A,C
            LD      DE,0001H
            LD      C,B
            AND     0FH
LOOP5:
            OUT     (01),A     ;Display value
            LD      B,C
LOOP6:      DJNZ    LOOP6
            XOR     80H        ;Toggle speaker bit
            SBC     HL,DE
            JR      NZ,LOOP5
            POP     BC
            POP     DE
            POP     HL
            LD      A,04H      ;G segment
            OUT     (02),A
            XOR     A
            OUT     (01),A
            RET
KEYPRESS:
            IN      A,(03)     ;Check if key is pressed
            BIT     6,A
            RET     NZ         ;No key pressed
            IN      A,(00)     ;Get actual key
            AND     1FH        ;Mask upper bits
            LD      E,A
            XOR     A          ;Clear flags
            LD      A,E
            RET

DSPTBL:     DB      08H,04H,02H,01H
SEGTBL:     DB      0EBH,28H,0CDH,0ADH,2EH,0A7H,0E7H,29H,0EFH,2FH

;Here is the random number generator that puts 1,2,4 and 8 in memory
;between 0B00 and 0BFF.  Call this routine first
RANGEN:
            LD      B,00H
            LD      HL,0B00H
            LD      D,00010001B  ;(rotating 1 bits)
RG1:
            LD      A,R
RG2:
            RLC     D
            DEC     A
            JR      NZ,RG2
            LD      A,D
            AND     0FH
            LD      (HL),A      ;Store randome number
            INC     HL
            PUSH    AF          ;Waste time to move R on a bit
            POP     AF         
            DJNZ    RG1
            RET
